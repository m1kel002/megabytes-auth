service: megabytes-auth
frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.8
  region: ap-southeast-1
  environment:
    user_pool_id: { Ref: UserPool }
    client_id: {Ref: UserClient }
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-idp:AdminInitiateAuth
        - cognito-idp:AdminCreateUser
        - cognito-idp:AdminSetUserPassword
      Resource: "*"
  
functions:
  login:
    handler: services/login/main.handler
    events:
      - http:
          path: /login
          method: post
  profile:
    handler: services/profile/main.handler
    events:
      - http:
          path: /profile
          method: get
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: ecswr4
  signup:
    handler: services/signup/main.handler
    timeout: 30
    events:
      - http:
          path: /signup
          method: post
  verifySignup:
    handler: services/confirm_signup.handler
    timeout: 30
    events:
      - http:
          path: /verify
          method: post
  resendVerification:
    handler: services/resend_verification_code.handler
    timeout: 30
    events:
      - http:
          path: /resend
          method: post

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: megabytes-auth-pool
        Schema:
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 8
        AutoVerifiedAttributes: ["email"]
    UserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: user-pool-ui
        GenerateSecret: false
        UserPoolId: { Ref: UserPool }
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows:
          - "ADMIN_NO_SRP_AUTH"
